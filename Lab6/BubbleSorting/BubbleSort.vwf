/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0ms\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	PAGE_SETUP = "header_footer\
Date: %D\
%f\
Project: %j\
\
Page %p of %P\
Revision: %a\
margin\
1\
1\
1\
1\
orientation\
1\
paper_size\
9\
paper_source\
15\
fit_page_wide\
1\
fit_page_tall\
1\
";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000.0;
	SIMULATION_TIME = 1000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("|BubbleSort|Sort:inst|state")
{
	VALUES = "state.Waiting", "state.SendAddrA_r", "state.GetA", "state.SendAddrB_r", "state.GetB", "state.Compare", "state.SendAddrA_w", "state.WriteA", "state.SendAddrB_w", "state.WriteB", "state.CheckLoop", "state.CheckFlag";
}

SIGNAL("Sort:inst|Address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Sort:inst|Address[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|Address";
}

SIGNAL("Sort:inst|Address[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|Address";
}

SIGNAL("Sort:inst|Address[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|Address";
}

SIGNAL("Sort:inst|Address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|Address";
}

SIGNAL("Sort:inst|Address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|Address";
}

SIGNAL("Sort:inst|Address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|Address";
}

SIGNAL("Sort:inst|Address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|Address";
}

SIGNAL("Sort:inst|Address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|Address";
}

SIGNAL("Sort:inst|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Sort:inst|count[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|count";
}

SIGNAL("Sort:inst|count[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|count";
}

SIGNAL("Sort:inst|count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|count";
}

SIGNAL("Sort:inst|count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|count";
}

SIGNAL("Sort:inst|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|count";
}

SIGNAL("Sort:inst|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|count";
}

SIGNAL("Sort:inst|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|count";
}

SIGNAL("Sort:inst|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|count";
}

SIGNAL("Sort:inst|dataA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Sort:inst|dataA[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataA";
}

SIGNAL("Sort:inst|dataA[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataA";
}

SIGNAL("Sort:inst|dataA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataA";
}

SIGNAL("Sort:inst|dataA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataA";
}

SIGNAL("Sort:inst|dataA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataA";
}

SIGNAL("Sort:inst|dataA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataA";
}

SIGNAL("Sort:inst|dataA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataA";
}

SIGNAL("Sort:inst|dataA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataA";
}

SIGNAL("Sort:inst|dataB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Sort:inst|dataB[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataB";
}

SIGNAL("Sort:inst|dataB[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataB";
}

SIGNAL("Sort:inst|dataB[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataB";
}

SIGNAL("Sort:inst|dataB[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataB";
}

SIGNAL("Sort:inst|dataB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataB";
}

SIGNAL("Sort:inst|dataB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataB";
}

SIGNAL("Sort:inst|dataB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataB";
}

SIGNAL("Sort:inst|dataB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Sort:inst|dataB";
}

SIGNAL("Sort:inst|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|BubbleSort|Sort:inst|state";
}

SIGNAL("Sort:inst|Flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("launch")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sort:inst|WR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Complete")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("Sort:inst|Address[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|Address[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|Address[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|Address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|Address[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|Address[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1622.923;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 1560.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1560.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 1560.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 1560.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1400.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1080.0;
		LEVEL 1 FOR 978417.077;
	}
}

TRANSITION_LIST("Sort:inst|Address[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 662.923;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 977777.077;
	}
}

TRANSITION_LIST("Sort:inst|Address[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 182.923;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 977457.077;
	}
}

TRANSITION_LIST("Sort:inst|count[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|count[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("Sort:inst|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1582.924;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 1560.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1560.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 1560.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 1560.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1400.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1080.0;
		LEVEL 1 FOR 1240.0;
		LEVEL 0 FOR 977217.076;
	}
}

TRANSITION_LIST("Sort:inst|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 622.924;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 977217.076;
	}
}

TRANSITION_LIST("Sort:inst|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 142.924;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 977217.076;
	}
}

TRANSITION_LIST("Sort:inst|dataA[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 142.918;
		LEVEL 1 FOR 999857.082;
	}
}

TRANSITION_LIST("Sort:inst|dataA[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 142.918;
		LEVEL 1 FOR 999857.082;
	}
}

TRANSITION_LIST("Sort:inst|dataA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 142.918;
		LEVEL 1 FOR 999857.082;
	}
}

TRANSITION_LIST("Sort:inst|dataA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 142.918;
		LEVEL 1 FOR 999857.082;
	}
}

TRANSITION_LIST("Sort:inst|dataA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 142.918;
		LEVEL 1 FOR 999857.082;
	}
}

TRANSITION_LIST("Sort:inst|dataA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 142.918;
		LEVEL 1 FOR 12640.0;
		LEVEL 0 FOR 1760.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 978137.082;
	}
}

TRANSITION_LIST("Sort:inst|dataA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 142.918;
		LEVEL 1 FOR 6640.0;
		LEVEL 0 FOR 2720.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2120.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 1960.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 977497.082;
	}
}

TRANSITION_LIST("Sort:inst|dataA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 142.918;
		LEVEL 1 FOR 3400.0;
		LEVEL 0 FOR 3240.0;
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 2600.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 1760.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1640.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 800.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 977497.082;
	}
}

TRANSITION_LIST("Sort:inst|dataB[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 262.918;
		LEVEL 1 FOR 999737.082;
	}
}

TRANSITION_LIST("Sort:inst|dataB[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 262.918;
		LEVEL 1 FOR 999737.082;
	}
}

TRANSITION_LIST("Sort:inst|dataB[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 262.918;
		LEVEL 1 FOR 999737.082;
	}
}

TRANSITION_LIST("Sort:inst|dataB[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 262.918;
		LEVEL 1 FOR 999737.082;
	}
}

TRANSITION_LIST("Sort:inst|dataB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 262.918;
		LEVEL 1 FOR 999737.082;
	}
}

TRANSITION_LIST("Sort:inst|dataB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 262.918;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 1960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 840.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 1320.0;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 1320.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 1320.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 978337.082;
	}
}

TRANSITION_LIST("Sort:inst|dataB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 262.918;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1640.0;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 1160.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 977697.082;
	}
}

TRANSITION_LIST("Sort:inst|dataB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 742.918;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 520.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 840.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 840.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 800.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 680.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 977377.082;
	}
}

TRANSITION_LIST("Sort:inst|state")
{
	NODE
	{
		REPEAT = 1;
		LEVEL state.Waiting FOR 22.919;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.CheckFlag FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.CheckLoop FOR 39.994;
		LEVEL state.CheckFlag FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL state.SendAddrA_r FOR 40.0;
			LEVEL Undefined FOR 0.006;
			LEVEL state.GetA FOR 80.0;
			LEVEL state.SendAddrB_r FOR 40.0;
			LEVEL state.GetB FOR 80.0;
			LEVEL state.Compare FOR 39.994;
			LEVEL Undefined FOR 0.006;
			LEVEL state.CheckLoop FOR 39.994;
		}
		LEVEL state.CheckFlag FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL state.SendAddrA_r FOR 40.0;
			LEVEL Undefined FOR 0.006;
			LEVEL state.GetA FOR 80.0;
			LEVEL state.SendAddrB_r FOR 40.0;
			LEVEL state.GetB FOR 80.0;
			LEVEL state.Compare FOR 39.994;
			LEVEL Undefined FOR 0.006;
			LEVEL state.CheckLoop FOR 39.994;
		}
		LEVEL state.CheckFlag FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL state.SendAddrA_r FOR 40.0;
			LEVEL Undefined FOR 0.006;
			LEVEL state.GetA FOR 80.0;
			LEVEL state.SendAddrB_r FOR 40.0;
			LEVEL state.GetB FOR 80.0;
			LEVEL state.Compare FOR 39.994;
			LEVEL Undefined FOR 0.006;
			LEVEL state.CheckLoop FOR 39.994;
		}
		LEVEL state.CheckFlag FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		NODE
		{
			REPEAT = 5;
			LEVEL state.SendAddrA_r FOR 40.0;
			LEVEL Undefined FOR 0.006;
			LEVEL state.GetA FOR 80.0;
			LEVEL state.SendAddrB_r FOR 40.0;
			LEVEL state.GetB FOR 80.0;
			LEVEL state.Compare FOR 39.994;
			LEVEL Undefined FOR 0.006;
			LEVEL state.CheckLoop FOR 39.994;
		}
		LEVEL state.CheckFlag FOR 40.0;
		LEVEL state.SendAddrA_r FOR 40.0;
		LEVEL Undefined FOR 0.006;
		LEVEL state.GetA FOR 80.0;
		LEVEL state.SendAddrB_r FOR 40.0;
		LEVEL state.GetB FOR 80.0;
		LEVEL state.Compare FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.SendAddrB_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteB FOR 40.0;
		LEVEL state.SendAddrA_w FOR 39.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.WriteA FOR 39.994;
		LEVEL state.CheckLoop FOR 40.0;
		NODE
		{
			REPEAT = 6;
			LEVEL state.SendAddrA_r FOR 40.0;
			LEVEL Undefined FOR 0.006;
			LEVEL state.GetA FOR 80.0;
			LEVEL state.SendAddrB_r FOR 40.0;
			LEVEL state.GetB FOR 80.0;
			LEVEL state.Compare FOR 39.994;
			LEVEL Undefined FOR 0.006;
			LEVEL state.CheckLoop FOR 39.994;
		}
		LEVEL state.CheckFlag FOR 40.0;
		NODE
		{
			REPEAT = 7;
			LEVEL state.SendAddrA_r FOR 40.0;
			LEVEL Undefined FOR 0.006;
			LEVEL state.GetA FOR 80.0;
			LEVEL state.SendAddrB_r FOR 40.0;
			LEVEL state.GetB FOR 80.0;
			LEVEL state.Compare FOR 39.994;
			LEVEL Undefined FOR 0.006;
			LEVEL state.CheckLoop FOR 39.994;
		}
		LEVEL state.CheckFlag FOR 40.0;
		LEVEL state.Waiting FOR 977257.081;
	}
}

TRANSITION_LIST("Sort:inst|Flag")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 302.919;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 2960.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 2800.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 2480.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 2320.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 2160.0;
		LEVEL 0 FOR 979537.081;
	}
}

TRANSITION_LIST("launch")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 999980.0;
	}
}

TRANSITION_LIST("Reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 999990.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 24998;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("Sort:inst|WR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 343.865;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 39.377;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 360.623;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 39.377;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 400.623;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 39.377;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 360.623;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 39.377;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 720.623;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 39.377;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 360.623;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 39.377;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1040.623;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 39.377;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 360.623;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 39.377;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1360.623;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 39.377;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 360.623;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 39.377;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1680.623;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 39.377;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 360.623;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 39.377;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 2000.623;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 39.377;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 981536.758;
	}
}

TRANSITION_LIST("Complete")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 26.69;
		LEVEL 0 FOR 22720.0;
		LEVEL 1 FOR 977253.31;
	}
}

TRANSITION_LIST("Data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29.92;
		LEVEL 1 FOR 999970.08;
	}
}

TRANSITION_LIST("Data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29.909;
		LEVEL 1 FOR 999970.091;
	}
}

TRANSITION_LIST("Data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29.853;
		LEVEL 1 FOR 999970.147;
	}
}

TRANSITION_LIST("Data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29.601;
		LEVEL 1 FOR 999970.399;
	}
}

TRANSITION_LIST("Data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29.912;
		LEVEL 1 FOR 999970.088;
	}
}

TRANSITION_LIST("Data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29.877;
		LEVEL 1 FOR 1640.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 237.095;
			LEVEL 1 FOR 242.905;
		}
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 1242.905;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 237.095;
			LEVEL 1 FOR 242.905;
		}
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 1082.905;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 237.095;
			LEVEL 1 FOR 242.905;
		}
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 922.905;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 237.095;
			LEVEL 1 FOR 242.905;
		}
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 1122.905;
		LEVEL 0 FOR 1560.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1400.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1080.0;
		LEVEL 1 FOR 978370.123;
	}
}

TRANSITION_LIST("Data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29.867;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 242.905;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 1202.905;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 242.905;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 282.905;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 242.905;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 1202.905;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 242.905;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 482.905;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 237.095;
		LEVEL 0 FOR 242.905;
		LEVEL 1 FOR 237.095;
		LEVEL 0 FOR 1202.905;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 237.095;
		LEVEL 0 FOR 242.905;
		LEVEL 1 FOR 237.095;
		LEVEL 0 FOR 1522.905;
		LEVEL 1 FOR 1160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 237.095;
			LEVEL 1 FOR 242.905;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 680.0;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 242.905;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 562.905;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 977730.133;
	}
}

TRANSITION_LIST("Data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29.598;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 237.095;
			LEVEL 1 FOR 722.905;
		}
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 162.905;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 237.095;
			LEVEL 0 FOR 722.905;
		}
		LEVEL 1 FOR 360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 237.095;
			LEVEL 1 FOR 722.905;
		}
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 242.905;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 237.095;
			LEVEL 0 FOR 722.905;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 722.905;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 242.905;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 237.095;
		LEVEL 0 FOR 722.905;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 237.095;
		LEVEL 1 FOR 242.905;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 977410.402;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "launch";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Address[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Address[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Address[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataA[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataA[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36, 37, 38;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataB[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataB[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataB[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataB[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|dataB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|Flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sort:inst|WR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Complete";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
